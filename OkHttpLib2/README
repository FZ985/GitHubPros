

okhttp的简单封装使用

    get同步:

            try {
                Response response = HttpImpl.get("http://www.baidu.com").bind(this).execute();
                if (response != null) {
                    String string = response.body().string();
                    Toast.makeText(this, "返回:" + string, Toast.LENGTH_SHORT).show();
                }
            } catch (Exception e) {
                Toast.makeText(this, "同步catch:" + e.getMessage(), Toast.LENGTH_SHORT).show();
            }

    ------------------------------------------------------------------------------------------------
    get异步：
    HttpImpl.get("http://www.baidu.com")
                    .bind(this)
                    .load(DefLoad.use(this))
                    .enqueue(new RequestCallback<String>() {
                        @Override
                        public void onResponse(String data) {
                            Toast.makeText(OkHttp2Activity.this, "请求成功:" + data, Toast.LENGTH_SHORT).show();
                        }

                        @Override
                        public void onError(int code, Exception e) {
                            Toast.makeText(OkHttp2Activity.this, "请求失败:" + e.getMessage(), Toast.LENGTH_SHORT).show();
                        }
                    });


    ------------------------------------------------------------------------------------------------
    postParams同步：

            HashMap<String, Object> map = new HashMap<>();
            map.put("ip", "192.168.0.99");
            map.put("key", "9f703454a63103c1588a6abfec6ef91d");
            try {
                IPBean data = (IPBean) HttpImpl.postParams(ipUrl)
                        .request(new JRequest(IPBean.class, map))
                        .executeObject();
                if (data != null) {
                    Toast.makeText(this, "请求成功:" + data.toString(), Toast.LENGTH_SHORT).show();
                }
            } catch (Exception e) {
                Toast.makeText(this, "请求失败:" + e.getMessage(), Toast.LENGTH_SHORT).show();
            }

    ------------------------------------------------------------------------------------------------
    postParams异步：

            HashMap<String, Object> map = new HashMap<>();
            map.put("ip", "192.168.0.99");
            map.put("key", "9f703454a63103c1588a6abfec6ef91d");
            HttpImpl.postParams(ipUrl)
                    .request(new JRequest(map))
                    .enqueue(new RequestCallback<IPBean>() {
                        @Override
                        public void onResponse(IPBean data) {
                            Toast.makeText(OkHttp2Activity.this, "请求成功:" + data.toString(), Toast.LENGTH_SHORT).show();
                        }

                        @Override
                        public void onError(int code, Exception e) {
                            Toast.makeText(OkHttp2Activity.this, "请求失败:" + e.getMessage(), Toast.LENGTH_SHORT).show();
                        }
                    });


    ------------------------------------------------------------------------------------------------

    postJson异步：

            HttpImpl.postJson(testUrl)
                    .request(new JRequest(new JsonReq("1082565")))
                    .enqueue(new RequestCallback<JsonResp>() {
                        @Override
                        public void onResponse(JsonResp data) {
                            Toast.makeText(OkHttp2Activity.this, "请求成功:" + data.toString(), Toast.LENGTH_SHORT).show();
                        }

                        @Override
                        public void onError(int code, Exception e) {
                            Toast.makeText(OkHttp2Activity.this, "请求失败:" + e.getMessage(), Toast.LENGTH_SHORT).show();
                        }
                    });

    ------------------------------------------------------------------------------------------------


    下载：

      HttpImpl.download3(String url, String path, String fileName, DownLoadListenerAdapter call);



























































































